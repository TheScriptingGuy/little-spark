// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/kubernetes-helm
{
	"name": "Kubernetes - Local Configuration",

	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	// "dockerComposeFile": [
	// 	"../docker-compose-run.yml"
	// ],
	"image": "portablespark/little-spark:main",
	// // The 'service' property is the name of the service for the container that VS Code should
	// // use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	// "service": "little-spark",

	"features": {
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
			"enableNonRootDocker": "true",
			"moby": "true"
		},
		"ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {
			"version": "latest",
			"helm": "latest",
			"minikube": "none"
		},
		"./local-features/copy-kube-config": {}
	},

	"remoteEnv": {
		"SYNC_LOCALHOST_KUBECONFIG": "true"
	},

	"initializeCommand": "cd .devcontainer && ensure-mount-sources.cmd",
	"mounts": [
		{
			"source": "${env:HOME}${env:USERPROFILE}/.kube",
			"target": "/usr/local/share/kube-localhost",
			"type": "bind"
		},
		// Optional mount to also sync certs in your .minikube folder
		{
			"source": "${env:HOME}${env:USERPROFILE}/.minikube",
			"target": "/usr/local/share/minikube-localhost",
			"type": "bind"
		}
	],
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
			"ms-kubernetes-tools.vscode-kubernetes-tools",
			"ms-vscode-remote.remote-containers"
			],
			"settings": {
				"kubernetes.enable": true
			  }
		}
	},
	"postStartCommand": "sleep 30 && chmod +x /workspaces/little-spark/.devcontainer/bootstrap.sh && bash -c '/workspaces/little-spark/.devcontainer/bootstrap.sh'",

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "root"
}